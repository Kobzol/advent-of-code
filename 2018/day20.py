from collections import deque

import numpy as np

with open("input.txt", "r") as f:
    lines = [line.strip() for line in f]

regex = "(ESSSSESESSESESSESWSESEENNEEEEENWNNENWWSSSWWWW(SS|NENEE(SWEN|)NWNNENENENWWNEEESENNNWWNWNENWNEESSEES(WW|ESSEENNNESEEENNNEEESSSSSWWSSSSEEENWNN(WSSNNE|)EEEESWSSENEEEESSSWNNWSSWSEEEENENNENNESEEEESWWWWSSESWSESEEENENNN(WWSESWSWNNNW(ESSSENSWNNNW|)|NNENNEEESSEEESWSSWWNN(ESNW|)WW(NNESNWSS|)SW(N|SSSSENESSSESWSWSEENENNNENE(NWWW(S(E|S)|N(EEENNSSWWW|)WN(WSNE|)N)|SSSW(SSE(N|SWSESSWSESWWSSWSESEE(SSWSSE(SWWSSENESSWSWNWWWNEENWNENENNWN(WWWWWWSWWWNNNNESSSENNNENENNENENESSESS(ENNNNE(SS|E|NWW(SS|N(EENSWW|)WWWNENWWNWNN(WWWWSEEESWSEESSE(N|SWSWNWWNWWSESWWWWNWNNENNEESS(SW(SEWN|)(W|NN)|EEE(ESENSWNW|)NNWW(SEWN|)NWNENN(E(SEWN|)N(W|NN)|WSWWN(E|WWWSWWSESSEENWNEE(NWES|)S(ENESNWSW|)SSWSSWNWN(E|WSWNNN(ESNW|)NWNNE(NEE(SWEN|)NN(E(ENSW|)SS|W(NNNWESSS|)SWNWWSS(ENSW|)WWWSWSEEESSWNWWSSE(SWWNWWWWNEEEENWWWNWW(NNNNWSWN(WSWENE|)NEEESSSSENNESSEE(SWWEEN|)NWNNNENEENE(NWWSWN(WWWW(NN|SEEESWW(SESWENWN|)WWW)|NNEES(ENENE(NNWSNESS|)S|W))|SSSS(ENSW|)WW(WNENES|S))|W|S(E|SSSWSSESEESWWWWWNE(NWNNE(N(WWWSESSSSSSWNNWSWWWWSEEESSEN(N|ESEEESENNWW(W|NEEN(WW|ESESSW(N|SEENNNEEENWW(WW|NNEENN(WWWN(EE|WS(SEEEWWWN|)W)|EEESSEEEESWSSEESSSSWNNWWN(NNNWSSWNWSW(SEEESSESWWWNENWWSSWNNNWWSSSWWSWSESENNEE(EEESESWSESEENEESEESWWSSWNWSSSEEN(EESWSESWWSSSSWWWNEENWWNWNEN(WWSWWNNE(NEEE(SWWEEN|)NWNWWNWSS(WNNWWWNWSWWWSSEEEESSEEE(SWSWNWWWNN(ESNW|)WWWWNNE(S|NWWSWWWWNWSSWWWSSEEESSESWSESWSSSENNENEEEESWWSW(SW(SESEEEEEENWNNNNESEENEEENWN(WSWNWWWNNN(ESSEEE|WWWWWWS(SEESS(WWNEWSEE|)ENESE(EEESNWWW|)(SSSSWNWSWSEEE(WWWNENSWSEEE|)|NNWN(W(S|WW)|E))|WNN(WWW|NEEEESWWW(EEENWWEESWWW|))))|EE(ESESSWSWSSSSSEEENWWNEEESSSWWWWSS(WNNWWWWSWNNEEEEENWWWNNNN(EEN(W|E(SSWSS(WNN|EN)|EN(E|N)))|WWSESSSWWWSSE(N|SWS(WWNNWSSWNNNEEE(SS|NWWWWWN(E|NWWSESSESWWWSS(ENESENE(NN|S)|WWWWWNWNNNEENWWWWNNENWWSSWNNWSSSESWSSEEESE(S(WWNWWS(E|WNWSWWNENWWWSWS(EENSWW|)WNWNWSWS(WWNWSWWWWWWNNENNWSWNWWWNWSWSWSWWSWWNWSWWWS(WWNWWS(WNNNENWNENNEESWSSSES(E(NESEENENNWSW(S|WWWNEEENENNNNNNENEEENESEEEEESWWWWSESESSSEENENESSSES(EEESWSSEES(ENNNNW(SSWENN|)NENWNWNEENWWNWNNESESEEEESWSSW(W|NN|SSSESSS(WNNSSE|)E(NNNNWNENEN(W|NENESEESSSSSSS(W(SEWN|)WWW(S|NEENWWNNENEE(NWWEES|)SWS(ESSNNW|)W)|EENNNESENESSS(WWNEWSEE|)E(SWEN|)NNNNWNWSWNNENESE(NENNWWS(E|WNNNEEEES(SEENNW(S|NENWWNNWNWNENWWSSSESWWWNWSSWNWWNWWWWNWWWSSSSENNE(NWES|)ESWSEESWWWSEEEEENWNEEE(SEESSWWS(WN(WWW(S|WWWWNWN(WNNNE(SS|NWNNWNEENNENNENEESWSWSSEESS(WWN(E|W(SWSNEN|)N)|ENNESEEESEES(ENNNE(EENNWWWWS(SW(SEWN|)WNNWNENWNNWNEENENWWNWSWS(EE|SSSESWSESS(SENSWN|)WWW(W|NE(E|NNNNNNWWNWWWSSWNWSSSSEE(SSWSWNWN(WWWSESWSEESE(N(NWNSES|)EE|SWWSEESWWSSESSSE(NNE(NN(NN|W(W|S))|S)|SWWW(SS(ENESSSSESEENWNNNW(N|SS)|WW(N(W|E)|S(E|S)))|NENWWWWWNENWNEESENNWNEE(SSSS(WW|E)|NWWNWWSESSWNWSWWSWSS(SWNNWNNE(S|NWNNNENWNENWWNNNWSWWWWSWW(SSSESEEENESSESWWSSWNWNN(E(E|S)|WSW(SESESSSEENWNEENNESSSSW(N|SWSSWNWN(WW(NENWN(E|N)|SESESWW(SSEEEES(ENNN(E(NN(WSNE|)EN(ENWNNNNNNNNW(S|N(WWNN(ESENSWNW|)WSWWSESEN(SWNWNEWSESEN|)|E))|W)|SSSSWSWN(SENENNSSWSWN|))|WSW(WW|N))|WWWWSS)|N))|E))|NN))|NENWNNNEESS(WNSE|)EEE(SWWWEEEN|)NENESS(W|ESSENENEEEEEEESENNEESWSESE(NNNNWWNNNNNWNNESENEEENNENWWNWWNEEEENNNWSSWNNNNNESEEEESESSEESSWSWWSSESEESENEESWSESWWSWSES(ENNESSSEENEEENEEESWWSWWWSWSSEEN(ESEENN(W(S|WW)|EN(ENEENEESSW(N|SESSSSSWSWWWSESSSENNESSESWSESWWWNW(SSEESSEESENESSSSEEESSSE(NNNNNNWWW(SEESWW|NNWNW(WS(WNSE|)E|NEE(ENESENNNNESENEESEES(ENEES(ENNE(S(E(N|EEENNEESSE(S(ESEE(EENSWW|)S|WW(WW|NN))|NN))|S)|NNN(WWWSES(ENSW|)SWNWSWWNENNN(WWWWWSSS(ENNESE(SW|NES)|WWSWWNNE(S|ENNE(SS|NNE(EES(ENSW|)WW|NNWSWWSS(ENSW|)WWNW(NEE(NWNW(S|NNEEESS(WNWESE|)E(SWEN|)NESENNWNW(WWNENESENENNE(SSSS(WNSE|)SESWSEEENNW(N(WNSE|)EESSENN(SSWNNWESSENN|)|S)|NWNWNNWSWWNNNWNWSSESSSWNNWWSWSWWNENNE(S|EENWNNE(S|NNESEE(NNW(S|WWNNEES(EESENNNNWWWWWS(WWNWSWSWSSENESSEE(SWWWNWWWWWWNEEEENWWNNNNWWWWWSWWNENEENNNENENENNENNEENWWWWSWWNENENESENNWWNNEENWNNNNEEEENNENEESEESSSEEENNESESWSSWSSESWSSESESWSWNWN(E|NWNENNNNWSWSWNNWWNENWNW(NE(EES(W|SSE(EEE|S))|N)|SSWWWW(NEEEWWWS|)SEEEESSWSWW(SSSENEESENEENE(SSESWWSWWSSWWWW(NEENE(S|N(EENE|WN))|SWSEENEEESENESESEESWWSWWNN(ESNW|)WWSESWSEEEESS(EEEEENNWSWNWW(SEWN|)NEENNNWNENN(WWW(NEEWWS|)WWSEESE(NEWS|)S|EESWSSEESWSEESENNNW(S|NW(NEESESENNNNNEEESWWSESENENNEEESWSW(N|SEENEENNESSSENNNNWNNEES(W|ENESEENNW(NNEENNNESENENNNWSSWNNNWWWNEENNNNESESWSEEEESWWS(WNWESE|)ESESEEENENWNNESEEEESSWSWNW(NEEWWS|)SWSSSWWWNWSW(NN(N|EEESEN)|SSSENNESSSENNNESSSESWSWSSENENENESSEENEESSESENNNNENENNWNWSS(E|SWNNWNENWNWNENEESWSESEENWNEESESESWW(W|SSENEENNNEENE(SSSWW(NEWS|)SSESWSSEE(SSWWWN(NWWSSE(N|SSWSSWNWSWWNEN(ENWNNNENE(EEENNWSWW(EENESSNNWSWW|)|SSWSES(E|S))|WWWWWWNWN(EESE(E|NN)|W(N|WSESESEEEESE(N|SWSWNNWSSSEEENESSSENESESESSSSSWWNNWWSWNWWNNNWNN(ESENESSSW(SEEENN(WSNE|)ESSE(N|SS)|N)|WNWWNNWNN(WSSWNWNWNWWSWSWWNNWSWWNWNNN(WSSSSESEESSESWSESWSS(ENESENENNNEENEE(ESWWSEEENNESSSENESSWWWNWSSEEESWSSEEEE(NNWN(NN|WSS(E|W)|E)|SSWWN(WWWNWSSEESSWNW(SSEEENN(ESSE(SWSSNNEN|)NEEN(WW|NEEEE(N(WWWNWS|N)|ES(ENEEEEENNNE(SSSSWW(WWW|SES(ENSW|)W)|NWNNNWSSWSW(SESWSEENNN(SSSWWNSEENNN|)|NNENWNNNESSENNESSE(NNNNNWSSWNWSW(WSWS(WNN(W(W|SS)|E)|SE(S|N))|NNEENN(WS|EESW))|SSS)))|SSWNNWWWSSEENW(ESWWNNSSEENW|))))|N)|WWNWSWNNNNEESS(WNSE|)E(S|NNN(EESWENWW|)NWWW(SEEWWN|)(NEN(NWS|ESEN)|W)))|E))|NWWN(WSSWWW(SESSWN|N(WNSE|)EE)|N|E))|WSS(WNNNENNWWWNWNNESESENN(ESSNNW|)WNWWWW(NEWS|)WWWSSESWSWSSWSWSWWSSENEENE(NEEEENESSS(WNSE|)EE(NNE(NN(E|WW(S(SS|E)|WWNW(SSWN(WSNE|)N|NNEN(ESS(SEWN|)W|WW))))|SS)|S(SS|W))|SSSSWS(SSWWWNEENWWNN(WWNWW(SESSW(N|SSSENESE(ESESSS(ENNNEN(E|WW)|SW(S|NWNN(ESNW|)W(S|N(W|E))))|NNNNWSSW(ENNESSNNWSSW|)))|NNENNW(N(NWWNNSSEES|)EEENNNEEESWSSE(NE(S|NNE(NWWN(EENSWW|)W(S|N)|S))|SWSWN(NNN|WSSS(S|W(W|NNN))))|S))|ESENENW(ESWSWNSENENW|))|EE(EE|N)))|E(SWEN|)N))|EESES(EENNEESWS(SWSNEN|)EENNEE(SWSEEES(W(S|W)|E)|NWWWNN(EES(W|EE)|WWW(N(W|ENNEE(SWSEWNEN|)N)|SEESWWS(W|S))))|W(WNSE|)S))|ESEESSWN(SENNWWEESSWN|))))))))|EE)|N(NNNWESSS|)W)|NNNWSSWWS(E|W(S|NNNESENNENNWNEE(NWNWNNENNE(SSS(W|S)|NWNWWSSS(ENNSSW|)WNNNNEENNESSE(NNNNNNWSSWS(E|WNNNWSWSWSSSSE(NNE(SENSWN|)N(N|W)|SWSSSE(SSWWWNWNEE(SEWN|)NWNWNNWSSS(E|SSWNWWNNESENNWWWWNENNNWNWSWWWSSESSEE(SWWSWNNNWSWWNWWSSE(SSSWWWSS(ENESES(W|SSEENNNNENWW(NEE(NWN(WSNE|)E|EESSSW(NN|SSW(NN|SSE(SWS(ESWENW|)W|NEEEES(ENNESENEEENWWWNN(NWSWSS(ENSW|)WSWWWNENE(S|ENWNNW(NEENESSSWN(SENNNWESSSWN|)|SS))|ESEE(NWES|)ESSESSSENENENWNN(EE(NWNEWSES|)S(SSS(E|WS(WSSS(S|WNWW(SEWN|)N(NNWWN(WSW(SSS(SWSSWSSSSESW(WNNNW(NNNE(E|SS)|SS(WNNSSE|)S)|S(EENN(NWNENW|ESSESS)|S))|EEENNWWSE(WNEESSNNWWSE|))|W)|EE)|EE))|E))|W|E)|WS(WNSE|)SS))|W)))))|S(W|SSS)))|WNNWWNWNENENEENE(SSSESWWNW(NE|WSE)|NWWWWS(EE|SWWS(E|SSSESWWNNNNNWSSWWNNNNWNWWNWWSSWWNNNNES(SS|EENWNENESSES(SEENENNNWSW(S(E|S)|WNN(E(S|EEEEESENESEEESESWSSENENNNEESESEES(WSSSW(S|NWWS(E|WN(NENE(ESW|NWN)|WWWNNWWWWWNEN(EES(ENESNWSW|)W|WW(NEWS|)SSSESWW(W|SS(ENEEE(SWWEEN|)NN(WS|ESEN)|SS)|N)))))|EENENWNEN(WWSWNWW(SESEES|WWWW(WWW|S))|ESESS(WNSE|)SEESSW(SSENE(EEENNE(SSSWSES(NWNENNSSWSES|)|NNWWNENN(EESS(WNSE|)(S|ENEN(EES(ENESNWSW|)(SS|W)|W))|WWWSSS(SSSEENN(W(NNNEWSSS|)S|E)|WWNNN(ESSNNW|)W)))|S)|N))))|WWWSWWS(WWWSESSE(NN|SWWWNWSWSSESEENWN(EESSEN(ESESEESWSWNWNWSWSEESWWWSWWWSSENEEEESEENWN(ENESENNENNENN(NWW(N|SESWWNW(ESEENWESWWNW|))|ESSSSSENEESSSEEESWSWSWSSSWNWWWWWNWWWNWN(EEEEENESENENE(SE(E|SWSW(WWW(SEEEEWWWWN|)WWW|N))|N(WWSWNN(WSSWSWN(SENENNSSWSWN|)|NN)|N))|WSWWSESSWWN(E|WWSWS(WNW(SSESWENWNN|)NEENWNNNNWNEEE(NENESENENN(WSWWN(E|WN(E|NNNWSWSSSSE(ESWSWNWNWWNNESENNWNWSWSWSWNNNWSSWNWSSWWNNWSSSESWSSEEENENN(E(NWES|)SSSWSEENENEN(ESSWSSEE(ESSWS(SSWNWNWNWNN(E(SEE(S(S|W)|E)|N)|WSWWWNN(ESEWNW|)WSWNWSWSWNWNWNNNNESSSENNNNNWSWWNNNNNWWWNWNWSWNWSWNNWWNN(WSWSWSSENE(N|SENESSEESESSSSWNWSSWNWWWSSSWWWNNNNWNEEEES(ENNEES(SWNSEN|)EENWNWWWN(WWSS(ENSW|)WNWNNWWSSE(N|S(E|WSSWWWSWNNWWWNWSWSEEEESSWSSENENESSESENNWNEN(W|EESWSSSSEN(NN|EEESWWSWWSWNNWWWSEESSWNWWNNN(WWWWNNWWSSSSWSSW(NNNNE(NNNEEN(NWSWNNNNESSENNE(S|NESEESEENNNNWNWSWWNNN(EEEES(WWWSNEEE|)EEN(W|EEESWWSWW(SSESE(NN(EEEE(NNW(SWWEEN|)NEE(E|S)|SS)|W)|SWW(SEESWW|N))|W))|WWWWWSSENESSSWW(NEWS|)S(EEENNE(NWNEWSES|)SEEEES(S|WW)|SSSSSSSS)))|ESESE(SWEN|)NN(W|E))|S)|SEENNESSSENNNNWN(EEEESWWSSSSESSWNWWWWW(NEEWWS|)SSESENN(ESE(N|SEEEEESSSSENNNNEENNWSWNNWWNEN(WW(WNNESEE(WWNWSSNNESEE|)|SSSEESWWWW(EEEENWESWWWW|))|ESESENN(W|EN(EEN(ENESENENEESESENEENWWWNEEENNESESSW(N|SEENEE(SSW(N|WWWWSSWSESEENEESWSWWWWNWSSESEESENN(EESSW(SWSWNWSSWNWWSWNNENN(ESSENE|NWSWWNNWWSSWNNWNENWN(WSSW(SSE(SE(N|SWSSSENNESSSSSWSWSSSSENNNESESESSEENESSESWSESSESSWSEESWWSWSS(WWWSWWSSSESENESS(WWWWWWNWWSSE(N|SENEEESWWSEESWWWNWWWSESE(N|ESSESWSESSENESSSWS(EENNE(NNNW(WNENWNEN(WWWSESSS(NNNWNEWSESSS|)|EEEEENWWN(WWNN(ESNW|)WSSSEE|E))|SS)|S)|WWWNEEN(WNNWSWS(WWW(NWSWWNWWWNEEENES(ENNNNESSEESWS(WNSE|)E(SWEN|)ENENWNWN(EESNWW|)NW(WNNWSSWSWWNENENNEENES(E(E|NNWWWWNWNNENNNENNNWNWNWNENWNNWNNESEENWNEENWNENWWSWS(SWNWWW(SSESE(NNWESS|)SSWNW(SSESWSSENENE(SSSW(N|WSSESSENNN(W|EN(ESESWWSSE(N|SWWWWNNW(NNN|SSSESEEE(NWWEES|)SWWSEEES(EE|WSESWSWWWW(SSEEN(ESSSE(EENWWEESWW|)SWWWSW(NNEENWW(EESWWSNEENWW|)|SES(EESSEN(N|E)|W))|W)|NNESENN(ESSNNW|)WNW(S|N(E|N))))))|N)))|N(N|W))|N)|NENNW(S|NNNEEESWS(WNSE|)SENES(SWWSEWNEEN|)ENENENNNNNE(NWWSSSSWNNWNN(ESNW|)W(WWW(SESEE(NWES|)SWS(EE(SE(SWEN|)E|N)|WNW(S|N))|N)|N)|SSSEEEESSSE(SSWSESWSESENEESE(NNWNSESS|)SSWNW(N|WWWWN(NNNNWSWSW(NNNN(WSWENE|)NNESESWS(EE(NNNWESSS|)E|S)|SSWSESWWS(WNSE|)EEENE(SSEENN(WSNE|)ESEE(NWES|)ESSSEESESSWWWWWSEES(ENEEENNENWNEN(WNN(ESNW|)WNNN(ESSNNW|)WSSSSES(WWNNSSEE|)S|E)|WSWNWSSSS(WWWNWSWS(WN(W|NNNES(EEESENNWNNWNNNWNWNWS(WNNEEESEES(SSSEE(SWSNEN|)NEEEE(E|NWWNWNW(NEESNWWS|)SW(N|S(EE|S)))|W)|SESSE(N|SS(SEN|WN)))|S))|EE)|ESE(NNWNEWSESS|)E))|NNN(WSSNNE|)N))|E))|NENENWW(S|NWNW(NNEE(N|S(W|S))|S))))))|E))|SS)|SS)|S)|SEEESWW(W|S))|E)|E))))|EENWNNNW(SWWNEWSEEN|)NEESSS)|ENENEESSS(WN(W|N)|EENESEENWNNNNE(NENENWNEE(NWNNEENWWWWSESWS(E|SSWWSS(ENEWSW|)WSESWW(SEESWWS(NEENWWEESWWS|)|NW(NNW(NNWNNEENWNEESENEE(NNNEEEE(NENWWNEENWNNENNNNEE(SWSESSW(S(SSS|W)|N)|NWWWWSESWWSSWSEE(NENWESWS|)SSWNWWWSESE(N|SWS(EE(E|NN)|WSWSESWWWWNENWNENEE(SWSSNNEN|)ENWWWNEENN(WSWWW(WSWSWWWW(NEENNWSWNNENEE(N(E|WW(W(W|S)|NN))|S(W|SS(E|S)))|S(W|ES(SEES(WSNE|)ENESE(SS(WNSE|)S|NNWWN(WWSEWNEE|)ENENESSW(ENNWSWENESSW|))|W)))|N)|EEN(NENNENWN(W|ENNNN(E(NWNSES|)SESEEESS(EEEE(SWWWEEEN|)NNE(S|E(NWWN(WWSW(SSENE(S|N)|NWSWN(NEEWWS|)W(W|S))|E)|E))|WNWWW(SEEWWN|)N)|WS(WWN(WSW(S|N)|E)|SS)))|W)))))|SS(WWWNEE|EEE(ENSW|)SWS(SW(S|W)|E)))|SWSSE(N|SWWWS(ESWSNENW|)WNN(EENWESWW|)W))|S)|S)))|SS)|SSSEEN(W|ESEES(ENE(S|NNWWWSEE(WWNEEEWWWSEE|))|SWSWWNN(E(E|S)|WSSWSS(WNNWESSE|)EEN(W|EEE(SSENNESSSSESEENEE(NNN(WSWS(E|W(S|NNEN(WWSSSNNNEE|)E))|ESE(SWEN|)N)|SWSSWSWNWSWWWW(NWWWWWN(W|ENENNEN(EE(NWES|)SSESWS(ESEEN(NW(NNWESS|)S|EEE)|WNN(WSSWENNE|)N)|W))|SEEESSWNWWSSS(EEEN(WWNSEE|)EENWNNEEEEESWWSW(NWES|)SEENEENESS(WWSWENEE|)EESENNWWNNN(ESSEE(NENN(WSWSNENE|)ESESWS(W|E)|S)|W(NENSWS|)W(SEWN|)WWW)|S)))|N)))))))))|N)|N)|EESSENNN(ESSSEES(WSNE|)ENNNWN(EE(ENSW|)SS|NW(SSSEWNNN|)(W|N))|WW)))|N)|WW))|NWNW(NNNWS(S|WNW(NEENEE(NWWN(EE|WNW(SSESWENWNN|)W)|S(W|SSES(W|S)))|SWWSESWWWWN(EE|NWSSS(WSNE|)EE)))|S)))|W)|W))))|W)|NN))|E(N|E))))))|E)|WWSESSWN(SENNWNSESSWN|)))|ESENESES(W|ENN(W|ESSEEEENESESSW(SSSS(EEESSSE(SSW(S(SWEN|)E|N)|NNNNNESEE(SS|NWNEENNESSS(WSEWNE|)EEENEENNWNEESESWSS(WWSWSNENEE|)E(EN(NEES(ENENWWWNNWW(SESNWN|)WN(WSWNWSWSW(NWN(EE|WSS(WSSWWNENNENWWSSWNWW(SESESWS(W(NN|WSSEENW(ESWWNNSSEENW|))|EE)|WN(EEE|WWWWWSEE(WWNEEEWWWSEE|)))|E))|SES(SWNSEN|)E(NN|E))|EEEEEESS(WWNEWSEE|)E(SSESNWNN|)NEEEN(WWW|EE))|W)|W)|S)))|S)|NWSWNW(S|W))))))|E)|N(W|NN(N|E)))|N(N|WWS(S|E)))|WWS(SWEN|)E)|NNN)))|E)|SSW(N|SEEE(SSWNW(S|W)|EEN(E|W))))|EE(N|SESSSSW(N|S(W|ESESWW(S(EESW(W|SESWS(SEEE(NW(NENENWW(S|NEENENENEENWWWNNWWWW(SSSENNEESWSE(SWWSEWNEEN|)E|NEEEEESSEEEENNENWWNN(ESENESSSEEENWN(WSNE|)ENESEE(NNW(NN(WSSWNSENNE|)EENN(ESSSWW|NNWSSSW(ENNNESNWSSSW|))|S)|EESE(SWSWSWNNN(ESNW|)WSW(SWWSEESE(SSS(ENNNEEN(SWWSSSNNNEEN|)|WWNN(ESNW|)NWSWSESWSWNNWNN(E(S|ENWN(WSNE|)E)|WSW(SSWNWSSSENESS(EEE(SS|N(ESNW|)WWNENWN(SESWSEWNENWN|))|WWWWNEN(N|W))|N)))|NN)|N)|N))|WWSESSESWWNNWNWWW(WW(SEEEEWWWWN|)W|NEN(NWSNES|)EE(SWEN|)E))))|W)|S)|W))|W)|N))))))))|WW)|N)|W))|E)))|W))))))|N)|NWNEENWWW(EEESWWEENWWW|)))|NN)))|S))|SSS))))|N)))|S)))|W)))|W(S|WWN(WSSWSWNNW(SSSEWNNN|)NWWWWNEEENENWW(WS(W|E)|NEEESSE(NNNEWSSS|)SW(SESNWN|)W)|EE))))|N(ENSW|)WWW(NNESNWSS|)WS(WW|EE))|WW|NEN(W|E))))|NWNENWW(EESWSEWNENWW|))|EEEESW)|W))|S(WW|E(S(SS(E|S)|W)|N))))))|S))|S)|SSEEESWWSWW(NEWS|)(SSEE(NWES|)SWSEE(EENWW|SWW)|WW))))))|E(SS|EE))|E))|W)|WSWNW(N|S|WW))|S)))|SWWWWS(EESWWSESE(EN(ESNW|)(W|NN)|SWWNWS(SEEE|WN))|WWNENWNW(SSSWENNN|)WNWN(ENESEE(S(ES(SENNESS(NNWSSWENNESS|)|W)|WW)|NWN(WNWSNESE|)E)|WSW(N|S(W|EE)))))|N(EESNWW|)W(S|NNN(ESSNNW|)W(NNE(NNWSWWWWWNW(N(WSNE|)(EEES(W|ENE(EENNEEE(ESSWNWSW(SEE(SWWEEN|)E|N)|NW(NEWS|)W)|S))|N)|SS(EEEEE|SS))|S)|S))))|W))|W)|WWS(E|W(SEWN|)WWNWNENNEENWWNN(ESEESE(SWSWWSSENE(WSWNNEWSSENE|)|E)|NNNW(NENNW(NE(NWWWEEES|)ESSE(SWEN|)E|S)|SSSSW(SESSWWWWSESEE(NWES|)S(WW(SEWN|)WWN(E|NNNENESE(N|E))|E)|N)|WW))))|SWWWN(WWNWWSSWWSSWW(SSEESWWWSEES(WSNE|)ENENNENW(WW|NEEN(WW|N(N|EESSW(SS(WNSE|)E(SEEWWN|)N|N))))|NENW(NENESEN(SWNWSWENESEN|)|WW))|E)))))|ENEE(NWES|)S(S|W))))))|EE)|ENENN(W(NE|SWWSE)|EESWSE)))))|EEE)|SSSS)|WW(SEWN|)WWN(WSWENE|)E)))|E))|N(N|EE))|ESSSE(SWSSSNNNEN|)NNNE(S|NNNN(WW|EEEN(WWW|E(SEWN|)N))))|NWWNWSWN(SENESEWNWSWN|)))|WWW))|S)))|S))|WWW)|WWN(W(S|WWWWS(E|SWNWSWS(EE|S|WNNNNENNWNEENWW(NEEESSSE(N|SS(ENNSSW|)WW(S(WSNE|)E|N(E|N)))|WSSS(E|SS)))))|N)))|S)|WW)|E)|EEEEEEEEN(W|ESENESENNN(WSW(W|N)|ESESWSE(WNENWNSESWSE|))))|EE))|E)|NNWN(W(SWEN|)N|E)))))|EEEEEENWW(EESWWWEEENWW|))))|EEN(EEEEENWNEENESSSW(N|S(WWWWW|EEENWNNENNW(WNNN(ESENNNNN(WWSSE(SWEN|)N|NNNESENESENEENNENENNN(ESSENNEEEN(ESSSWSE(ENNNNES(E|S)|SSWWN(NNN(WSSSWNWSWSSSW(NN|WWSSESWWWSEEEEEESSSENESEENESENESSEESSSENNE(NWNNNNWNEE(NWWNWSSSWWS(EESSENN(SSWNNWESSENN|)|WWW(S|WNW(S|NWWNW(S|N(EEENWNEE(NWWEES|)SESENN(EESWSSES(WWW(SEEWWN|)N(W(N|S|WW)|E)|ENN(W|NNESEEE(SWEN|)N))|W)|W)))))|SSSS)|SSSWWWSEEESWWWWNWWWS(WNWSWNNEENENWWNEN(WWSSWWWWNWNWSWNNENWWW(SESSSEESWSWSES(EENWNEN(EESWSSEEENNN(WSSWENNE|)EE|N)|WWNN(N(NNNWWEESSS|)E|W))|NNNE(SSEEEEEESSSS(ENSW|)WNWNWNEES(NWWSESNWNEES|)|NWNEESEN(SWNWWSNEESEN|)))|ESEE(NWES|)EESSWWW(NEEWWS|)S(EE|W))|EE)))|E)|E))|W)|WSSWWNWWSWSESES(WWNWNNNENENNWWWSE(E|SW(SSSS(SE|WNWS)|WWNNN(WW(NN|SESWWW(NENWWEESWS|)S)|E(SS|NNEESS(WNSE|)EENWNNWWNENNN(ESEESENEEEE(NWES|)SSS(ENNE(S|N(W|ENENEE))|WWSWWNWS(WNN(WNEWSE|)EEE(NESENSWNWS|)S|SESEE(NWES|)SSWWW(SEESNWWN|)N(N|EE)))|NWSWS(W(NNENWWWWWNENE(NW(WSWNSENE|)N(NNNWWEESSS|)E|S)|W)|S(ENSW|)SS))))))|ENN(WNSE|)E)))|WWWWSESW(SS(SS|EEN(ENNWSNESSW|)W)|WWNW(SWNSEN|)NEE(S|NWNN(NW|ES))))|S)))|W))|N))|N)|N))|N(WNNW(WWWW|SS)|E))|EE)|S)|ESE(NE|SW))|W)|NNN)|NN(NE(SE|NW)|WW))|EE)))))))|E)|S)|E)))|N))|S))))))|ESESEENNW(WNSE|)S)))|SSS(E|WWWWWNENENNE(SSE(SWWEEN|)NN|N)))|EE)|N)|NNW(NEWS|)S))|N)))))))"


def parse(data, i, start, end):
    if i >= len(data):
        assert False

    c = data[i]
    assert c == start

    direction = {0: [""]}

    i += 1
    activedir = 0
    while True:
        c = data[i]
        if c == start:
            dirs, reti = parse(data, i, "(", ")")
            direction[activedir] += [dirs, ""]
            i = reti
        elif c == end:
            return (direction, i)
        elif c == "|":
            activedir += 1
            direction[activedir] = [""]
        else:
            direction[activedir][-1] += c
        i += 1


directions, _ = parse(regex, 0, "(", ")")
directions = directions[0]

grid = np.full((200, 200), '#', dtype=str)
dirs = {
    'E': (0, 1),
    'W': (0, -1),
    'N': (-1, 0),
    'S': (1, 0)
}


def printgrid():
    y, x = np.where(grid != '#')
    yDim = [np.min(y), np.max(y)]
    xDim = [np.min(x), np.max(x)]

    for y in range(yDim[0] - 1, yDim[1] + 2):
        for x in range(xDim[0] - 1, xDim[1] + 2):
            print(grid[y, x], end='')
        print()
    print()


def move(pos, c):
    return (pos[0] + dirs[c][0], pos[1] + dirs[c][1])


graph = {}


def crawl(pos, path):
    ret = set()
    if isinstance(path, str):
        for c in path:
            target = move(pos, c)
            grid[target] = '|' if c in "EW" else "-"
            target = move(target, c)
            grid[target] = '.'

            graph.setdefault(pos, set()).add(target)
            graph.setdefault(target, set()).add(pos)
            pos = target
        ret.add(pos)
    elif isinstance(path, dict):
        for p in path.values():
            ret.update(crawl(pos, p))
    else:
        ret.add(pos)
        for p in path:
            next = set()
            for position in ret:
                next.update(crawl(position, p))
            ret = next
    return ret


start = (grid.shape[0] // 2, grid.shape[1] // 2)
grid[start] = 'X'
crawl(start, directions)


def bfs():
    visited = set()
    distances = {}
    queue = deque()
    queue.append(start)
    distances[start] = 0

    while queue:
        vertex = queue.popleft()
        if vertex in visited:
            continue
        visited.add(vertex)
        for neighbour in graph[vertex]:
            if neighbour not in visited:
                distances[neighbour] = distances[vertex] + 1
                queue.append(neighbour)
    return distances

distances = bfs()
print(len([d for d in distances.values() if d >= 1000]))
